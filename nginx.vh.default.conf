map $regexp_post $crc32 {
    '~crc32\x22\x0D\x0A\x0D\x0A(?<crc>.*)\x0D'   $crc;
    default                         'nodata';
}

#map $regexp_time $cdate {
#    '~(?<date>.*)T'   $date;
#    default                         'nodata';
#}


server {
    listen       80;
    server_name  file-storage.loc s1.filestorage.loc;

    #charset koi8-r;
    error_log  /var/log/nginx/default.error.log;
    error_page 404 =200;

    set $uploadhost "s1.filestorage.loc";
    set $backend $http_backend;
    set $folder $http_folder;

    #set $regexp_time $time_iso8601;

    location /upload-sync {
    
        set $regexp_time $time_iso8601;
        upload_resumable on;
        upload_store /var/upload/$folder;
        #upload_store /var/upload/$cdate;
        
        upload_state_store /var/upload/temp;
        
        upload_aggregate_form_field "$upload_field_name.crc32" "$upload_file_crc32";
        upload_pass @none;
 
        upload_store_access user:rw;
 
        upload_cleanup 400-420 500-505;
    }

    location @none {
        set $regexp_post $request_body;
        add_header Filename $http_x_session_id;
        add_header Storage $uploadhost;
        add_header Folder $folder;
        add_header CRC32 $crc32;
        return 200;
    }

    location /upload {
        # Pass altered request body to this location
        upload_pass   @backend_check;
        upload_resumable on;

        # Store files to this directory
        upload_store /var/upload/$folder;

        # Allow uploaded files to be read only by user
        upload_store_access user:r;

        # Set specified fields in request body
        
        upload_state_store /var/upload/temp;

        upload_set_form_field "name" "$upload_file_name";
        upload_aggregate_form_field "crc32" "$upload_file_crc32";
        upload_aggregate_form_field "size" "$upload_file_size";
        upload_aggregate_form_field "storage" "$uploadhost";

        upload_cleanup 500;
    }

    location @backend_check {
        proxy_pass http://$backend;
    }
    
    location /download/ {
        error_page 404 = $uri; #if file not found send redirect to another backend
        alias /var/upload/;
    }


}
